@model MasterOk.Models.FilterSortViewModels.SortViewModelProduct
@using MasterOk.Models.ModelDataBase;
@using System.Security.Claims
@{
    ViewData["Title"] = "Товары";
    var role = User.FindFirstValue(ClaimsIdentity.DefaultRoleClaimType);
    switch (role)
    {
        case "admin": Layout = "~/Views/Shared/Admin_Layout.cshtml"; break;
        case "marketplacemanager": Layout = "~/Views/Shared/MarketManager_Layout.cshtml"; break;
    };
    Product product = new Product();
}

<h1>Товары</h1>
<hr />
<p>
    <a asp-action="Create" role="button" class="btn btn-primary">Добавить новый товар</a>
</p>
<div class="table-responsive">
    <table class="table">
        <thead>
            <tr>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortModelProduct.IdSort">
                        @Html.DisplayNameFor(model => product.Id)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortModelProduct.TitleSort">
                        @Html.DisplayNameFor(model => product.TitleProduct)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortModelProduct.DescriptionSort">
                        @Html.DisplayNameFor(model => product.DescriptionProduct)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortModelProduct.WarrantySort">
                        @Html.DisplayNameFor(model => product.Warranty)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortModelProduct.PriceSort">
                        @Html.DisplayNameFor(model => product.Price)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortModelProduct.SubCategorySort">
                        @Html.DisplayNameFor(model => product.SubCategory)
                    </a>
                </th>
                <th>
                    <a asp-action="Index" asp-route-sort="@Model.SortModelProduct.CountSort">
                        @Html.DisplayNameFor(model => product.CountStoreProduct)
                    </a>
                </th>
                <th>Функции</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Products)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TitleProduct)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DescriptionProduct)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Warranty)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SubCategory.TitleSubCategory)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CountStoreProduct)
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" role="button" class="btn btn-secondary">Редактировать</a>
                        <a asp-action="Details" asp-route-id="@item.Id" role="button" class="btn btn-info">Информация</a>
                        <a asp-action="Delete" asp-route-id="@item.Id" role="button" class="btn btn-danger">Удалить</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>